"""
Django settings for AI_service project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from decouple import config, Csv
import dj_database_url
from pathlib import Path
from cryptography.fernet import Fernet

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='', cast=Csv())


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AI_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AI_service.wsgi.application'


# Database
# Use DATABASE_URL if provided, defaulting to local SQLite
DATABASES = {
    'default': dj_database_url.config(default=f'sqlite:///{BASE_DIR / "db.sqlite3"}')
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# ──────────────────────────────────────────────────────────────────────────────
# Telegram & Bot Configuration
# ──────────────────────────────────────────────────────────────────────────────

TELEGRAM_API_ID        = config('TELEGRAM_API_ID', cast=int)
TELEGRAM_API_HASH      = config('TELEGRAM_API_HASH')
TELEGRAM_BOT_TOKEN     = config('TELEGRAM_BOT_TOKEN')
ADMIN_BROADCAST_TOKEN  = config('ADMIN_BROADCAST_TOKEN')

# ──────────────────────────────────────────────────────────────────────────────
# Payment & Webhook
# ──────────────────────────────────────────────────────────────────────────────

PAYSTACK_SECRET_KEY    = config('PAYSTACK_SECRET_KEY')
SITE_URL               = config('SITE_URL')  # e.g. https://yourdomain.com

# ──────────────────────────────────────────────────────────────────────────────
# External API Credentials
# ──────────────────────────────────────────────────────────────────────────────

GOOGLE_APPLICATION_CREDENTIALS = config('GOOGLE_APPLICATION_CREDENTIALS')
OPENAI_API_KEY               = config('OPENAI_API_KEY')

# ──────────────────────────────────────────────────────────────────────────────
# Bot & Scheduler Defaults
# ──────────────────────────────────────────────────────────────────────────────

BOT_PAUSED    = False
TRIAL_DAYS    = config('TRIAL_DAYS', default=7, cast=int)
GRACE_HOURS   = config('GRACE_HOURS', default=24, cast=int)
MAX_MSG_RATE  = config('MAX_MSG_RATE', default=30.0, cast=float)

# Optional external MT5 executor
EXECUTOR_URL   = config('EXECUTOR_URL', default=None)
EXECUTOR_TOKEN = config('EXECUTOR_TOKEN', default=None)

# Encryption key for MT5 credentials (Fernet)
MT5_ENC_KEY = config('MT5_ENC_KEY', default=Fernet.generate_key().decode())
